version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: crewdeck_db
      POSTGRES_USER: crewdeck_user
      POSTGRES_PASSWORD: crewdeck_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U crewdeck_user -d crewdeck_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build: ./backend
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://crewdeck_user:crewdeck_password@db:5432/crewdeck_db
      - SECRET_KEY=your-secret-key-change-this-in-production
      - DEBUG=true
      - CEREBRAS_API_KEY=${CEREBRAS_API_KEY}
      - SERPER_API_KEY=${SERPER_API_KEY}
    volumes:
      - ./backend:/app
    depends_on:
      db:
        condition: service_healthy
    command: >
      sh -c "
        sleep 10 &&
        alembic upgrade head &&
        python -c 'from app.db.session import SessionLocal; from app.db.models import Crew; from sqlalchemy.orm import Session; db = SessionLocal(); crews = [
          Crew(name=\"Market Research Crew\", description=\"Comprehensive market research and analysis powered by Cerebras AI for any topic or industry\", crew_identifier=\"market_research_crew\", credits_required=5, is_single_agent=False),
          Crew(name=\"Blog Writer Crew\", description=\"Professional blog post creation with strategy, writing, and editing powered by Cerebras AI\", crew_identifier=\"blog_writer_crew\", credits_required=3, is_single_agent=False),
          Crew(name=\"Travel Planner\", description=\"Personalized travel itinerary planning with detailed recommendations powered by Cerebras AI\", crew_identifier=\"travel_planner_crew\", credits_required=4, is_single_agent=True)
        ]; [db.add(crew) for crew in crews if not db.query(Crew).filter(Crew.crew_identifier == crew.crew_identifier).first()]; db.commit(); db.close()' &&
        uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
      "

  # Frontend
  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend

volumes:
  postgres_data: